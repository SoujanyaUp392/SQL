-- 1 CREATE A STUDENT TABLE FOR COLUMNS SID, FIRSTNAME, SECONDNAME, CGPA, JOINEDDATE, MAJORSUBJECT
-- 2 CREATE A PROGRAM TABLE FOR COLUMNS SID REFERENCES, PROGRAM NAME, PROGRAM START DATE
-- 3 CREATE A SCHOLORSHIP TABLE FOR COLUMNS SID REFERENCES, SCHOLORSHIP AMOUNT, SCHOLORSHIP DATE

USE SKYLLX;

-- 1
CREATE TABLE STUDENT(SID INT PRIMARY KEY, FIRSTNAME VARCHAR(10), SECONDNAME VARCHAR(10), CGPA FLOAT, JOINEDDATE DATETIME, MAJORSUBJECT VARCHAR(10));
DESC STUDENT;

-- 2
CREATE TABLE PROGRAM(SID INT, FOREIGN KEY(SID) REFERENCES STUDENT(SID), PROGRAMNAME VARCHAR(10), PROGRAMSTARTDATE DATETIME);
DESC PROGRAM;

-- 3
CREATE TABLE SCHOLORSHIP(SID INT, FOREIGN KEY(SID) REFERENCES STUDENT(SID), SCHOLORSHIPAMT INT, SCHOLORSHIPDATE DATETIME);
DESC SCHOLORSHIP;


-- 1 INSERT 10 ROWS IN STUDENT TABLE AND PROGRAM TABLE AND 5 ROWS IN SCHOLORSHIP TABLE
-- 2 WRITE A SQL QUERY TO FETCH FIRSTNAME FROM STUDENT TABLE IN UPPERCASE AND USE ALIAS NAME AS STUDENT NAME
-- 3 WRITE A SQL QUERY TO FETCH UNIQUE VALUES OF MAJORSUBJECTS FROM STUDENT TABLE
-- 4 WRITE A SQL QUERY TO PRINT FIRST THREE CHARACTERS OF FIRSTNAME
-- 5 WRITE A SQL QUERY TO FIND THE POSITION OF ALPHABET A IN THE FIRSTNAME COLUMN OF FIRST ROW FROM STUDENT TABLE
-- 6 WRITE A SQL QUERY TO FETCH UNIQUE VALUES OF MAJORSUBJECTS FROM STUDENT TABLE AND IT'S LENGTH
-- 7 WRITE A SQL QUERY TO PRINT FIRSTNAME FROM THE STUDENT TABLE AFTER REPLACING 'a' WITH 'A'
-- 8 WRITE A SQL QUERY TO PRINT FIRSTNAME AND SECONDNAME FOM STUDENT TABLE INTO SINGLE COLUMN NAME SHOULD BE COMPLETE NAME
-- 9 WRITE A SQL QUERY TO PRINT ALL STUDENT DETAILS FROM STUDENT TABLE ORDER BY FIRSTNAME IN ASCENDING AND MAJORUBJECTS IN DESCENDING
-- 10 WRITE A SQL QUERY TO PRINT DETAILS OF THE STUDENTS WHO'S FIRSTNAME START WITH __


-- 1
INSERT INTO STUDENT VALUES(1, 'SOUJANYA', 'UPANAL', 8.9, '2024-10-14 15:00:00', 'JAVA');
INSERT INTO STUDENT VALUES(1, 'SOUJANYA', 'UPANAL', 8.9, '2024-10-14 15:00:00', 'JAVA');
INSERT INTO STUDENT VALUES(2, 'PRIYANKA', 'MASHAL', 9, '2024-10-15 15:00:00', 'PYTHON');
INSERT INTO STUDENT VALUES(3, 'SHIVU', 'J', 9.9, '2024-10-15 15:00:00', 'SCIENTIST');
INSERT INTO STUDENT VALUES(4, 'MANTU', 'KUMBAR', 8.8, '2024-10-15 15:00:00', 'ANALYTICS');
INSERT INTO STUDENT VALUES(5, 'ARUN', 'GUDIHAL', 7.9, '2024-10-15 15:00:00', 'ANALYTICS');
INSERT INTO STUDENT VALUES(6, 'MANOJ', 'SHINDLE', 9, '2024-10-16 15:00:00', 'SCIENTIST');
INSERT INTO STUDENT VALUES(7, 'RASHMIKA', 'G', 6, '2024-10-20 15:00:00', 'ANALYTICS');
INSERT INTO STUDENT VALUES(8, 'TAMANNA', 'K', 7.2, '2024-10-23 15:00:00', 'JAVA');
INSERT INTO STUDENT VALUES(9, 'AISHU', 'B', 9.1, '2024-10-25 15:00:00', 'PYTHON');
INSERT INTO STUDENT VALUES(10, 'VISHAL', 'DHOTRE', 9.7, '2024-11-05 15:00:00', 'POWER BI');

INSERT INTO PROGRAM VALUES(1, 'PYTHON', '2024-10-16 16:00:00');
INSERT INTO PROGRAM VALUES(2, 'JAVA', '2024-10-15 16:00:00');
INSERT INTO PROGRAM VALUES(3, 'JAVA', '2024-10-14 16:00:00');
INSERT INTO PROGRAM VALUES(4, 'PYTHON', '2024-10-18 16:00:00');
INSERT INTO PROGRAM VALUES(5, 'PYTHON', '2024-10-20 16:00:00');
INSERT INTO PROGRAM VALUES(6, 'JAVA', '2024-10-25 16:00:00');
INSERT INTO PROGRAM VALUES(7, 'PYTHON', '2024-10-26 16:00:00');
INSERT INTO PROGRAM VALUES(8, 'PYTHON', '2024-10-14 16:00:00');
INSERT INTO PROGRAM VALUES(9, 'JAVA', '2024-10-16 16:00:00');
INSERT INTO PROGRAM VALUES(10, 'C', '2024-10-15 16:00:00');

INSERT INTO SCHOLORSHIP VALUES(1, 40000, '2024-10-20 14:00:00');
INSERT INTO SCHOLORSHIP VALUES(2, 20000, '2024-10-20 14:00:00');
INSERT INTO SCHOLORSHIP VALUES(3, 30000, '2024-10-20 14:00:00');
INSERT INTO SCHOLORSHIP VALUES(4, 25000, '2024-10-20 14:00:00');
INSERT INTO SCHOLORSHIP VALUES(5, 60000, '2024-10-20 14:00:00');

-- 2
SELECT UPPER(FIRSTNAME) AS STUDENTNAME FROM STUDENT;

-- 3
SELECT DISTINCT MAJORSUBJECT FROM STUDENT;

-- 4
SELECT SUBSTR(FIRSTNAME, 1,3) FROM STUDENT;

-- 5
SELECT LOCATE('A', FIRSTNAME) FROM STUDENT WHERE SID = 1;
SELECT INSTR(FIRSTNAME, 'A') FROM Student WHERE SID = 1; 

-- 6
SELECT DISTINCT MAJORSUBJECT, LENGTH(MAJORSUBJECT) FROM STUDENT;

-- 7
SELECT REPLACE(FIRSTNAME, 'a', 'A') FROM STUDENT;

-- 8
SELECT CONCAT(FIRSTNAME,SECONDNAME) AS COMPLETENAME FROM STUDENT;

-- 9
SELECT * FROM STUDENT ORDER BY FIRSTNAME ASC, MAJORSUBJECT DESC;

-- 10
SELECT * FROM STUDENT WHERE FIRSTNAME LIKE('S%');



-- 1 WRITE A SQL QUERY TO PRINT THE DETAILS OF THE STUDENT WITH THE FIRST NAME AS RASHMIKA AND TAMANNA 
-- 2 WRITE A SQL QUERY TO PRINT THE DETAILS OF STUDENTS EXCLUDING FIRST NAME AS RASHMIKA AND TAMANNA
-- 3 WRITE A SQL QUERY TO PRINT THE DETAILS OF THE STUDENT WHOSE FIRST NAME ENDS WITH A 
-- 4 WRITE A SQL QUERY TO PRINT THE DETAILS OF THE STUDENT WHOSE FIRST NAME ENDS WITH A AND CONTAINS 4 ALPHABETS
-- 5 WRITE A SQL QUERY TO PRINT THE DETAILS OF STUDENT WHOSE CGPA IS BETWEEN 7.00 TO 9.00
-- 6 WRITE A SQL QUERY TO FETCH THE COUNT OF STUDENT WHOSE MAJORSUBJECT IS SCINTISTS
-- 7 WRITE A SQL QUERY TO FETCH THE STUDENT FULLNAME TO WHOSE CGPA IS GREATER THAN OR EQUALS TO 8.5 AND LESSER THAN OR EQUAL TO 9.5
-- 8 WRITE A SQL QUERY TO FETCH THE NUMBER OF STUDENTS FOR EACH MAJORSUBJECT IN THE DESCENDING ORDER
-- 9 DISPLAY THE DETAILS OF STUDENTS WHO HAVE SCHOLORSHIP INCLUDING ALL NAME, AMOUNT, DATE
-- 10 WRITE AN SQL QUERY TO SHOW ONLY ODD ROWS FROM THE STUDENT TABLE 	SID%2 != 0
-- 11 WRITE A SQL QUERY TO SHOW ONLY EVEN ROWS FROM THE STUDENT TABLE
-- 12 LIST ALL THE STUDENTS AND THEIR SCHOLORSHIP AMOUNT IF THEY ARE RECEIVED ANY. IF A STUDENT HAS NOT RECEIVED SCHOLORSHIOP THEN DISPLAY NULL FOR THE SCHOLORHIP AMT
-- 13 WRITE AN SQL QUERY TO SHOW 5 RECORDS OF STUDENT WHICH IS ORDER BY DESCENDING ORDER
-- 14 WRITE A SQL QUERY TO DETERMINE THE 5TH CGPA FROM THE TABLE 	LIMIT(5,1)
-- 15 WRITE A SQL QUERY TO FETCH THE LIST OF STUDENTS WITH THE SAME CGPA
-- 16 WRITE A SQL QUERY TO SHOW THE SECOND HIGHEST CGPA FROM A STUDENT TABLE USING SUB QUERY
-- 17 WRITE AN SQL QUERY TO SHOW 1 ROW TWICE IN RESULTS FROM TABLE
-- 18 WRITE A SQL QUERY TO LIST STUDENT ID WHO DOES NOT GET SCHOLORSHIP
-- 19 WRITE A SQL QUERY TO FETCH THE FIRST 50% RECORD FROM A TABLE 		LIMIT(COUNT/2)
-- 20 WRITE A SQL QUERY TO FETCH THE MAJORSUBJECT THAT HAVE LESS THAN 4 PEOPLE IN IT



-- 1
SELECT * FROM STUDENT WHERE FIRSTNAME IN('RASHMIKA', 'TAMANNA');

-- 2
SELECT * FROM STUDENT WHERE FIRSTNAME NOT IN('RASHMIKA', 'TAMANNA');

-- 3
SELECT * FROM STUDENT WHERE FIRSTNAME LIKE('%A');

-- 4
SELECT * FROM STUDENT WHERE FIRSTNAME LIKE('___A');

-- 5
SELECT * FROM STUDENT WHERE CGPA BETWEEN 7.00 AND 9.00;

-- 6
SELECT COUNT(*) FROM STUDENT WHERE MAJORSUBJECT = 'SCIENTIST';

-- 7
SELECT FIRSTNAME, SECONDNAME, CGPA FROM STUDENT WHERE CGPA >= 8.5 AND CGPA <= 9.5;

-- 8
SELECT MAJORSUBJECT, COUNT(MAJORSUBJECT) FROM STUDENT GROUP BY MAJORSUBJECT ORDER BY COUNT(MAJORSUBJECT) DESC;

-- 9
SELECT * FROM STUDENT INNER JOIN SCHOLORSHIP ON STUDENT.SID =
SCHOLORSHIP.SID;

SELECT STUDENT.FIRSTNAME, STUDENT.SECONDNAME,SCHOLORSHIP.SCHOLORSHIPAMT,SCHOLORSHIP.SCHOLORSHIPDATE
FROM STUDENT INNER JOIN SCHOLORSHIP ON STUDENT.SID = SCHOLORSHIP.SID;

-- 10
SELECT * FROM STUDENT WHERE SID%2!=0;

-- 11
SELECT * FROM STUDENT WHERE SID%2=0;

-- 12
SELECT * FROM STUDENT LEFT OUTER JOIN SCHOLORSHIP ON STUDENT.SID =
SCHOLORSHIP.SID;

SELECT STUDENT.FIRSTNAME, STUDENT.SECONDNAME,SCHOLORSHIP.SCHOLORSHIPAMT,SCHOLORSHIP.SCHOLORSHIPDATE
FROM STUDENT LEFT OUTER JOIN SCHOLORSHIP ON STUDENT.SID = SCHOLORSHIP.SID;

-- 13
SELECT * FROM STUDENT ORDER BY SID DESC LIMIT 5;

-- 14
SELECT CGPA FROM STUDENT LIMIT 4,1;

-- 15
SELECT S1. * FROM STUDENT S1, STUDENT S2 WHERE S1.CGPA = S2.CGPA AND S1.SID != S2.SID;

-- 16
SELECT MAX(CGPA) FROM STUDENT WHERE CGPA < (SELECT MAX(CGPA) FROM STUDENT);

-- 17
SELECT * FROM STUDENT 
UNION ALL 
SELECT * FROM STUDENT ORDER BY SID;

-- 18
SELECT * FROM STUDENT WHERE SID NOT IN (SELECT SID FROM SCHOLORSHIP);

-- 19
SELECT * FROM STUDENT LIMIT(SELECT COUNT(*) FROM STUDENT)/2;

-- 20
SELECT MAJORSUBJECT, COUNT(MAJORSUBJECT) FROM STUDENT GROUP BY MAJORSUBJECT HAVING COUNT(MAJORSUBJECT) < 4;




-- 21 WRITE A SQL QUERY TO ALL MAJORSUBJECT ALONG WITH THE NUMBER OF PEOPLE IN IT
-- 22 WRITE A SQL QUERY TO SHOW THE LAST RECORD FROM THE TABLE
-- 23 WRITE A SQL QUERY TO FETCH THE FIRST ROW OF TABLE
-- 24 WRITE A SQL QUERY TO FETCH LAST 5 RECORD FROM A TABLE
-- 25 WRITE AN SQL QUERY TO FETCH 3 MAXIMUM CGPA FROM A TABLE
-- 26 WRITE AN SQL QUERY TO FETCH 3 MINIMUM CGPA FROM A TABLE
-- 27 WRITE A SQL QUERY TO FETCH MAXIMUM SCHOLORSHIPAMT FROM A TABLE
-- 28 WRITE A SQL QUERY TO FETCH THE NAME OF STUDENTS WHO HAS HIGHEST CGPA 
-- 29 WRITE A SQL QUERY TO SHOW THE CURRENT DATE AND TIME
-- 30 WRITE AN SQL QUERY TO CREATE A VIEW FOR THE STUDENT TABLE
-- 31 WRITE AN SQL QUERY TO UPDATE THE CGPA TO 7.5 FOR THE STUDENT WHOSE MAJOR SUBJECT IS SCIENTIST
-- 32 WRITE A SQL QUERY TO FIND AVG OF THE CGPA FOR EACH MAJOR SUBJECT
-- 33 WRITE A SQL QUERY TO FIND THE NUMBER OF STUDENTS IN EACH MAJORSUBJECT WHO HAVE A CGPA GREATER THAN 5.0
-- 34 WRITE A SQL QUERY TO FIND THE STUDENT WHO HAVE SAME MAJORSUBJECT
-- 35 CREATE A STORED PROCEDURE FOR FETCHING ALL THE DATA FROM STUDENT TABLE 



-- 21
SELECT MAJORSUBJECT, COUNT(MAJORSUBJECT) FROM STUDENT GROUP BY MAJORSUBJECT;

-- 22
SELECT * FROM STUDENT WHERE SID IN(SELECT MAX(SID) FROM STUDENT);

-- 23
SELECT * FROM STUDENT WHERE SID IN(SELECT MIN(SID) FROM STUDENT);

-- 24
SELECT * FROM STUDENT ORDER BY SID DESC LIMIT 5;

-- 25
SELECT CGPA FROM STUDENT GROUP BY CGPA ORDER BY MAX(CGPA) DESC LIMIT 3;

-- 26
SELECT CGPA FROM STUDENT GROUP BY CGPA ORDER BY MIN(CGPA) LIMIT 3;

-- 27
SELECT MAX(SCHOLORSHIPAMT) FROM SCHOLORSHIP;

-- 28
SELECT FIRSTNAME, SECONDNAME, CGPA FROM STUDENT WHERE CGPA IN(SELECT MAX(CGPA) FROM STUDENT);

-- 29
SELECT CURRENT_DATE(), CURRENT_TIME(), NOW();

-- 30
CREATE VIEW STUDENTS AS SELECT * FROM STUDENT;

-- 31

UPDATE STUDENT SET CGPA = 7.5 WHERE MAJORSUBJECT = 'SCIENTIST';

-- 32
SELECT MAJORSUBJECT, AVG(CGPA) FROM STUDENT GROUP BY MAJORSUBJECT;

-- 33
SELECT MAJORSUBJECT, COUNT(MAJORSUBJECT) FROM STUDENT WHERE CGPA > 5.0 GROUP BY MAJORSUBJECT;

-- 34
SELECT S1. * FROM STUDENT S1, STUDENT S2 WHERE S1.MAJORSUBJECT = S2.MAJORSUBJECT AND S1.SID != S2.SID;

-- 35
CALL NEW_PROCEDURE;


USE SKYLLX;

ALTER TABLE STUDENT MODIFY COLUMN SID INT;

ALTER TABLE STUDENT RENAME COLUMN SID TO STUDENT_ID;

DESC STUDENT;

ALTER TABLE STUDENT MODIFY COLUMN MAJORSUBJECT VARCHAR(20);

DESC STUDENT;

ALTER TABLE STUDENT RENAME COLUMN MAJORSUBJECT TO MSUB;